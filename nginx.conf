worker_processes auto;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Define custom log format to include response times
    log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout 65;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    client_max_body_size 50M;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Default server definition
    server {
        listen              8000;
        server_name         127.0.0.1;  # Replace with your actual domain name

        # Define Django project path
        set $django_path /var/www/html;

        location / {
            include proxy_params;
            proxy_pass http://unix:$django_path/myapi.sock;
            proxy_read_timeout 600s;
            proxy_connect_timeout 600s;
        }

        location /static/ {
            alias $django_path/myapi/static/;
        }

        location /media/ {
            alias $django_path/myapi/media/;
        }

        # Redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        # Deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }
    }

    gzip on;
    gzip_proxied any;
    gzip_types text/plain application/json;
    gzip_vary on;
    gzip_disable "msie6";
}
